# Generated by Django 5.2 on 2025-04-19 12:18

import app.models
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(unique=True, validators=[app.models.no_spaces, app.models.username_length], verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('profile_picture', models.URLField(blank=True, null=True, verbose_name='Profile Picture (URL)')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SongModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('artist', models.CharField(max_length=100, verbose_name='Artist / Band Name')),
                ('artist_type', models.CharField(choices=[('artist', 'Artist'), ('band', 'Band')], max_length=10, verbose_name='Type (Artist or Band)')),
                ('release_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1888), django.core.validators.MaxValueValidator(2025)], verbose_name='Release Year')),
                ('genre', models.CharField(choices=[('pop', 'Pop'), ('rock', 'Rock'), ('hiphop', 'Hip-Hop'), ('aesthetic_rap', 'Aesthetic Rap'), ('jazz', 'Jazz'), ('classical', 'Classical'), ('electronic', 'Electronic'), ('house', 'House'), ('hardstyle', 'Hardstyle'), ('techno', 'Techno'), ('folk', 'Folk'), ('indie', 'Indie'), ('metal', 'Metal'), ('punk', 'Punk'), ('rnb', 'R&B'), ('country', 'Country'), ('reggae', 'Reggae'), ('other', 'Other')], max_length=50, verbose_name='Genre')),
                ('cover', models.URLField(blank=True, null=True, verbose_name='Cover Image URL')),
                ('duration', models.DurationField(verbose_name='Duration')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By')),
            ],
        ),
    ]
